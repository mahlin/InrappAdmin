@model InrappAdmin.Web.Models.ViewModels.LeveransViewModels.AdmForvantadleveransViewModel

@{
    ViewBag.Title = "Skapa ny förväntad leverans";
}

<script type="text/javascript">

    var registerLista = @Html.Raw(Json.Encode(Model.RegisterList));

    $(document).on('change', '#ddlDelregister', function () {
        $("#SelectedDelregisterId").val($('#ddlDelregister').val());
        registerLista.forEach(function (register, index) {
            if ($('#ddlDelregister').val() === register.Id.toString()) {
                if ($('#ddlDelregister').val() !== 0) {
                    //populera dropdown för filkrav
                    addSelectFilkrav("FileRequirementsSelect-container", register.Filkrav);
                    $('#filkravDropDown').show();
                }
            }
        });
    });

    function addSelectFilkrav(divname, filkrav) {
        //$('#IngetAttRapporteraForPeriod').val(namn[0]);
        var newDiv = document.createElement('div');
        var html = ' <span style="white-space: nowrap; width: 360px;display: inline-block;">Filkrav: &nbsp;&nbsp<select id="ddlFilkrav" class="form-control ddl" style="width:175px;display:inline-block;padding-left:10px;">', i;
        html += "<option value='0'> - Välj - </option>";
        for (i = 0; i < filkrav.length; i++) {
            html += "<option value='" + filkrav[i].Id + "'>" + filkrav[i].Namn + "</option>";
        }
        html += '</select></span>';
        newDiv.innerHTML = html;
        document.getElementById(divname).innerHTML = newDiv.innerHTML;
        //document.getElementById(divname).appendChild(newDiv);
    }

</script>


@using (Html.BeginForm("CreateForvantadLeverans", "Leverans", FormMethod.Post))
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal padding-top-55">
    <h4>Skapa förväntad leverans</h4>
    <hr />

    <div class="form-group">
        @Html.Label("Delregister", new { @class = "control-label col-md-2" })
        @*@Html.LabelFor(model => model.DelregisterId, htmlAttributes: new {@class = "control-label col-md-2"})*@
        <div class="col-md-10" style="width: 225px !important;">
            @Html.DropDownListFor(m => m.SelectedDelregisterId, ViewBag.DelregisterList as SelectList, " - Välj delregister -", new { id = "ddlDelregister", @class = "form-control", style = "max-width:250px !important" })
        </div>
    </div>

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FilkravId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FilkravId, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>
    
    <div hidden id="filkravDropDown" class="row col-md-12" style="margin-bottom: 5px;width: 350px;">
        <div class="form-group" style="width: 320px !important;" id="FileRequirementsSelect-container">
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Period, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Period, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Period, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Uppgiftsstart, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Uppgiftsstart, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Uppgiftsstart, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Uppgiftsslut, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Uppgiftsslut, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Uppgiftsslut, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rapporteringsstart, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rapporteringsstart, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rapporteringsstart, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Rapporteringsslut, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Rapporteringsslut, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Rapporteringsslut, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Rapporteringsenast, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Uppgiftsstart, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Uppgiftsstart, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Spara" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Tillbaka", "Index", "Leverans")

    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
